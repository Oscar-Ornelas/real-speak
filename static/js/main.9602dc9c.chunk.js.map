{"version":3,"sources":["../node_modules/keyv/src sync","../node_modules/got/source sync","ChatMessage.js","SignUp.js","MessageList.js","Input.js","ChatApp.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ChatMessage","props","className","onClick","setCurrentView","SignUp","useState","username","setUsername","onSubmit","preventDefault","htmlFor","type","name","onChange","value","target","MessageList","messages","map","message","index","key","senderId","text","Input","setMessage","ChatApp","currentUser","setCurrentUser","users","currentRoom","setCurrentRoom","setMessages","setUsers","useEffect","ChatManager","instanceLocator","process","userId","currentId","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","roomId","messageLimit","hooks","onMessage","prevMessages","userIds","catch","error","console","log","sendMessage","chatkit","Chatkit","App","currentView","setCurrentId","setCurrentUsername","view","createUser","err","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9602dc9c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 269;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 277;","import React from 'react';\r\n\r\nfunction ChatMessage(props) {\r\n\r\n    function changeView() {\r\n      props.setCurrentView('signup');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <button className=\"chat-button\" onClick={changeView}>Send a message</button>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChatMessage;\r\n","import React, {useState} from 'react';\r\n\r\nfunction SignUp(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    const {value} = e.target;\r\n    setUsername(value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onSubmit(username);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n        <h1>Let's Talk</h1>\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n            <label htmlFor=\"email\">What is your email?</label>\r\n            <input type=\"email\" name=\"username\" onChange={handleChange} className=\"input\" />\r\n            <button className=\"submit\">Submit</button>\r\n        </form>\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nfunction MessageList(props) {\r\n  return (\r\n    <ul className=\"message-list\">\r\n        {props.messages.map((message, index) => (\r\n            <li key={index}>\r\n                <h4 className=\"message-sender\">{message.senderId}</h4>\r\n                <p className=\"message-text\">{message.text}</p>\r\n            </li>\r\n        ))}\r\n        <li></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default MessageList;\r\n","import React, {useState} from 'react';\r\n\r\nfunction Input(props) {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    const {value} = e.target;\r\n    setMessage(value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onSubmit(message);\r\n    setMessage(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"input-field\">\r\n        <input className=\"message-input\" type=\"text\" onChange={handleChange} value={message}/>\r\n        <input className=\"message-submit\" type=\"submit\" value=\"send\" />\r\n    </form>\r\n  )\r\n\r\n}\r\nexport default Input;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {ChatManager, TokenProvider} from '@pusher/chatkit-client';\r\nimport MessageList from './MessageList';\r\nimport Input from './Input';\r\n\r\nfunction ChatApp(props) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [currentRoom, setCurrentRoom] = useState({users: []});\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const chatManager = new ChatManager({\r\n        instanceLocator: process.env.REACT_APP_CHATKIT_INSTANCE_LOCATOR_KEY,\r\n        userId: props.currentId,\r\n        tokenProvider: new TokenProvider({\r\n            url: process.env.REACT_APP_TEST_TOKEN\r\n        })\r\n    })\r\n\r\n    chatManager\r\n      .connect()\r\n      .then(currentUser => {\r\n          setCurrentUser(currentUser);\r\n          return currentUser.subscribeToRoom({\r\n              roomId: \"20f9a93b-ec42-4b89-97a1-cd982d68c35f\",\r\n              messageLimit: 100,\r\n              hooks: {\r\n                  onMessage: message => {\r\n                      setMessages(prevMessages => [...prevMessages, message])\r\n                  },\r\n              }\r\n          })\r\n      })\r\n      .then(currentRoom => {\r\n          setCurrentRoom(currentRoom);\r\n          setUsers(currentRoom.userIds);\r\n      })\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  function addMessage(text) {\r\n    currentUser.sendMessage({\r\n      text,\r\n      roomId: currentRoom.id\r\n    })\r\n    .catch(error => console.error('error', error));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"header\">Hi There, Ask us anything</h2>\r\n      <MessageList messages={messages} />\r\n      <Input className=\"input-field\" onSubmit={addMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatApp;\r\n","import React, {useState} from 'react';\nimport ChatMessage from './ChatMessage';\nimport SignUp from './SignUp';\nimport ChatApp from './ChatApp';\n\nimport { default as Chatkit } from '@pusher/chatkit-server';\n\nconst chatkit = new Chatkit({\n  instanceLocator: process.env.REACT_APP_CHATKIT_INSTANCE_LOCATOR_KEY,\n  key: process.env.REACT_APP_CHATKIT_SECRET_KEY\n})\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('signup');\n  const [currentId, setCurrentId] = useState('');\n  const [currentUsername, setCurrentUsername] = useState('');\n\n  function createUser(username) {\n      chatkit.createUser({\n          id: username,\n          name: username,\n      })\n      .then((currentUser) => {\n          setCurrentUsername(username);\n          setCurrentId(username);\n          setCurrentView('chatApp');\n      }).catch((err) => {\n          if(err.status === 400) {\n            setCurrentUsername(username);\n            setCurrentId(username);\n            setCurrentView('chatApp');\n          } else {\n            console.log(err.status);\n          }\n      });\n  }\n\n\n  let view = '';\n  if (currentView === \"ChatMessage\") {\n      view = <ChatMessage  setCurrentView={setCurrentView}/>\n  } else if (currentView === \"signup\") {\n      view = <SignUp onSubmit={createUser}/>\n  } else if (currentView === \"chatApp\") {\n      view = <ChatApp currentId={currentId}/>\n  }\n\n  return (\n      <div className=\"App\">\n          {view}\n      </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}